from Crypto.Util import number
from Crypto.Util.number import getPrime, inverse, bytes_to_long, long_to_bytes, GCD
import owiener

p = 7741802571627804067643079435971705454932085324064804053047353233571989180168237446929476055773926029266390047355726546521886340201835336551763899701718843
q = 8541662763621578262802241785790215140214888552862384547335041988547799156859997033538506709398573681915711594411575078990064698979552749275869317435332019

e = 49021223420824032294575444337842664303659750592143989444346054309603440492775268654740750646154577199983231748104696333989408685866260184512430700588674016904760325272678306950185297232076982110968115039955042262569727950472571690980754170956553663654235748865752528926561864131231922710204977192321137288399
n = 66127866749382990493477163276430644453647695624334995188086456100669920148213670269845759053423673254332402160627157685339145491308779705315762969363954774452825663551444659323949452355916378323030776609439650018934209821520482796767784390070995410394768644427915964279983737069473408342964412902992693534017
d = 1321002892130907363304772307533938730810765133568799587587377646493338204703
phi = (p-1)*(q-1)
'''
d = owiener.attack(e, n)

if d is None:
    print("Failed")
else:
    print("Hacked d={}".format(d))
'''
flag = b"pctf{0nly_1f_y0u_kn0w_1t_4ll}"
# ct = pow(bytes_to_long(flag), e, n)
ct = 8214440190342637695885623377040616000223173252612142470466207162564051673142832718710432553671303636461281751669602995348471847481020154111855621160835952499495087307589230917860949961784841395585304632365781826041326966665826582827270625270052674359907454954636011791528953960817537440949798382812711685205
print(ct)
dt = pow(ct, d, n)
print(long_to_bytes(dt))
