from Crypto.Util.number import getPrime, inverse, bytes_to_long, long_to_bytes, GCD
from Crypto.Util import number
import os
p2 = 144910289777360490465588697212393702359938664715164522283989732359857269956074731992623459023601645553279580924078630125945950365603380326358827116044750623322758270965318463461816934740709400161989554306891399922634092611985036890279721909569716324387197895639119153161450726591346363925859156526642904960469
p1 = 140378344358008955299179134419966270462979198543293811623687832926701014630166501844404937828500714091222525930912426112320988636184413818789290883484148040599218875600417102591394371568454016468781561044157823415347378519604781469645199573403522413965124217482975354583832798754907119849012116419111796963223
q1 = 157450285219132420607643362969234509244217135770531410537565778156050501385835594368318703353608896073515620770707671066299163150716983782281302608629924485007259078410760695785938168509904426601381313054896526876914013100232682027783019598021936196756722099516752213579218512540679237991825691064195326882351
n1 = p1*q1
n2 = p2*q1
#t = (p1-1)*(q1-1)
e1 = 35152079
e2 = 1080827

d1 = 5719594668372086291817645174180973373170625780208545788264135568506773727981503456787791728922357453742237110509405212286231093175974528788990240203335614526209530418083147044034747658909040068068791579044061109596289117956869952901145937774396680788622815790446661061854798239962802349423466404771793095644572141260574355332975443554909127449479496196454196442321741033848327145396233926379006709850151551611743343256345656332608524241445970051168544719725202824276348325837341909271111756648350930231092006988633962704793993616874463037616412690085879205828520942942406507696209006285600641306702234652147513821319
d2 = 19584153979912149092974481061308943649395875098587282535056207210578029392862530998778821278939336572142755596487824130533676630917641328142594775201284917223144601944067168640059408075792814983680440534035784916223596042303680332347976638390593995722189256189788879269667043946724114749348154015449360155622050964704771168621573554314613128563369039048246490372709445535488736286359431706790551446308198749072855044687230988843409286814893792330616307159722844959384728894639483221201428504288364580989578351409774483407768615909781031687594939050328443848177253975673876466184266627210118656664887592658391178357963

m1 = b"SECRET{fl4g_f0r_us3r_1d_789890}"
m2 = b"SECRET{789890}"
flag = b"PCTF{0nly_1f_y0u_kn0w_1t_4ll}"
ct1 = pow(bytes_to_long(m1), e1, n1)
ct2 = pow(bytes_to_long(m2), e1, n1)
flag_ct = pow(bytes_to_long(flag), e2, n2)


try:
    message = int(input("Hello, how may I help you? "))

    if (message == ct1):
        print("Your request was accepted for further processing!")

    elif (message == ct2):
        print("\nThe encrypted flag for the user with the following parameters is:")
        print("\nn: ", n2)
        print("\ne: ", e2)
        print("\nFLAG: ", flag_ct)

    else:
        print("Sorry, could not understand what you meant by: ")
        print(long_to_bytes(pow(message, d1, n1)))
except:
    print("Bad request")
