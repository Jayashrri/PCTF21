from sage.all import *


def wiener(e, n):
    # m is the encrypted flag
    m = 22590543253793709484632825332052730901869500870428788366084174590209132304854936223485561441294324186746858309443176295686464301616587572660912641178657327425266867639604075958578390907650735506748937723496511481929850155584303161398145253559943853485249581454783382740190775463610331103603406162353413614409
    c = pow(m, e, n)
    lst = continued_fraction(Integer(e)/Integer(n))
    conv = lst.convergents()
    for i in conv:
        k = i.numerator()
        d = int(i.denominator())
        try:
            m1 = pow(c, d, n)
            if m1 == m:
                print("[*] Found d: ", d)
                return d
        except:
            continue
    return -1


e = 42763678068180324405985997857607497539263825207033675501965144853459364969587631157436606656082580650751101436817434900913679067314399520863421704013436729351034913742760716705282563374206639055605158668559469880540281064505601591110019881820615738843482236923178043129161609880033052395105391662297159608321
n = 59360782804407413522416571298493084219826254310575168671477307019289337183670261656559575071599338323054099125705237395481583063086234984501812872504880145760206916712867995019899595257616472196133917100862216739339368067344798908301525968760957408691426720338431793399138239903765505639822387020850228860267
wiener(e, n)
