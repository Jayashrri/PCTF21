from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from os.path import dirname, realpath
import base64
import compress_pickle
import numpy
from matplotlib import pyplot


def photons_to_bits(bits):
    photon_map = {complex(0, 1): '1', complex(1, 0): '0', complex(0.707, -0.707): '1', complex(0.707, 0.707): '0'}
    temp = ''
    for photon in bits:
        temp += photon_map[photon]
    return temp

# photons = input("\nYOUR PHOTONS: ")
photons = 'QlpoOTFBWSZTWTTlawcAGor/7d7AAAQAQQAggIAQAlpnz0BBBA4AhAGAQAEAQABQBD4YOCArYAMaNGgGTIaMRpoGmAkyqqBkDAgAwDRNBKfqVVQGgYCGmIwmBBjRo0AyZDRiNNA0wClSpkA00NNAGjEaDJwiV2YRDPSqskFUtNVVWKVVr2t3jux+JAcykJmRDNErCKnHhEaVIYiVnRDiqlZAAy6NGjK9cBK04VIbduz32Y6uvs9/Z5GMAB9ero6XdNoqJxIis2WKRZJ0RTRYUqEoklUcMU5YRSZRptZIakpRcTpKiJKQUJXNCLRJISYgZXVSRSNWVGCVJgqiTOMttYYhbZsCGWNbotrZmDlHY2bJpnGXMasLITWbnOImba1hqVlxGIzdliO2sotCKJInLQwzcbWmlDFiqKBcNMrSIkkJKwjayMwrViSFIQtoZqnMTomgQWpy5rErCMDREJTUlEiI5yUUuqhpkhImGmaG1E4hLaLKTiktDMUJETphkURosTFLYSmkUWKgaYnVA6gohTRRmVmQm1uy1u024jqQxRILLhBm5eZ7eHAAAA7wAADw4buCQHBIDekBrqlb0hV9e7qqv+5xOVHRRQdzonOOclOOUBIUcEJySjhQKAEjiiBBJTkiTgckUQ5OcJKcHDoA6XBwUEJxIQRInSCRB3CjikpSOhHLkIRBERwHB0ATnEcpOjhJIdE5HRCHdd3d3/i7kinChIGnK1g4'
bits = photons_to_bits(compress_pickle.loads(base64.b64decode(photons.encode()), compression='bz2'))

# basis = input("\nYOUR BASIS: ")
basis = 'CORTO/W7ot9L+5pTDpuV3yU9T30aWs12oi4pl/LivVeQ1GtaoAjKvzAq494Y7HVGnj5GxB5QVfrMCZzii1p4FYxUAkqJ6nkha0NJQj0D8S3V4+EIJxe6Bo3vC4uaIOfAYCFWPomaFFeY5clLNOJxlvryTj2MWY+UVEq2Ddwa94s='
basis = base64.b64decode(basis.encode())
basis = ''.join('{:08b}'.format(n) for n in basis)

server_basis = '1tdVpq/hyejREIsm60Vg3/1a/Sw8Nt/Nv4irX2fzPkmLduS23twuO+qjvDO4hQLRye2vVZVVCt1AzQ+67bkpPYfdjb9657OpkcXlZbv2aQWAlK0o5xxvGXwWBOObcuUFSk/gXhwgO0PKAwAlgNOyD1ugF6nhKjw7409wJ+UYkcc='
server_basis = base64.b64decode(server_basis.encode())
server_basis = ''.join('{:08b}'.format(n) for n in server_basis)

key = ''
for i in range(len(basis)):
    if basis[i] == server_basis[i]:
        key += bits[i]
key = key[:256]
key = bytes([int(key[i:i+8], 2) for i in range(0, len(key), 8)])
# print(f"\nKEY: {base64.b64encode(key).decode()}")

msg = 'YMyIQR1KVQXmQZj3hFIrbxC9DZtMf9vtKK6tdEGlujBGgRgQ7JbOoWb8NpCdF7BqiCop1aR+88rhTKYehLE6fv/8Zm7ECwHETRVm7kWTjzOTtdRNl9n+9RgXPPPCs3XY/QLcjChCmHBSP44yraEC9vxtFp4NcO95fwstO/JkiaM='
msg = base64.b64decode(msg.encode())

decipher = AES.new(key, AES.MODE_ECB)
msg = decipher.decrypt(msg)
# msg = unpad(msg, AES.block_size).decode()
print(f"\nmessage: {msg}")

alice_key = '0E0pnkUOghl9XVQjKJ3yvFZ7NP2KFw81N8kHcEn29NY='
alice_key = base64.b64decode(alice_key.encode())

file = dirname(realpath(__file__)) + '/includes/encrypted.txt'
with open(file, 'rb') as f:
    alice_photons = f.read()

alice_photons = base64.b64decode(alice_photons)
alice_photons = AES.new(alice_key, AES.MODE_ECB).decrypt(alice_photons)
alice_photons = unpad(alice_photons, AES.block_size)
alice_photons = compress_pickle.loads(alice_photons, compression='bz2')
alice_photons = [[float(photon.real), float(photon.imag)] for photon in alice_photons]
alice_photons = numpy.array(alice_photons)
x, y = alice_photons.T
pyplot.scatter(x, y)
# pyplot.show()

cipher = AES.new(key, AES.MODE_ECB)
secret = 'stop_lying_imp'
secret = cipher.encrypt(pad(secret.encode(), AES.block_size))
secret = base64.b64encode(secret).decode()
print(f"\nPASSWORD: {secret}")
